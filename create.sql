DROP DATABASE IF EXISTS GENSHIN;

CREATE DATABASE GENSHIN;

USE GENSHIN;

CREATE TABLE SKILL(
	SKILL_ID INT NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(50) NOT NULL,
	LV INT, 
	PRIMARY KEY (SKILL_ID)
);

-- Note: for simplicity only, all percentage will only keep the number before the "%" 
CREATE TABLE ATTACK(
	ATTACK_ID INT NOT NULL AUTO_INCREMENT,
	1ST FLOAT NOT NULL,
	2ND FLOAT NOT NULL,
	3RD FLOAT NOT NULL,
	4TH FLOAT NOT NULL,
	5TH FLOAT NOT NULL,
	CHARGED FLOAT NOT NULL,
	PRIMARY KEY (ATTACK_ID)
);

/* DEFEND (DMG ABSORPTION) CALCULATE BASED ON BASE * R + B
 * E.G. NOELLE'S DMG ABSORPTION  AT SKILL LEVEL 1= DEF (BASE) * 160% (R) + 769 (B)
 * CALCULATION ON HEALING USES THE SAME FORMULA */
CREATE TABLE DEFEND(
	DEFEND_ID INT NOT NULL AUTO_INCREMENT, 
	BASE VARCHAR(10) NOT NULL,
	R FLOAT NOT NULL,
	B INT NOT NULL,
	PRIMARY KEY (DEFEND_ID)
);

CREATE TABLE CURE(
	CURE_ID INT NOT NULL AUTO_INCREMENT, 
	BASE VARCHAR(10) NOT NULL,
	R FLOAT not null,
	B INT NOT NULL,
	PRIMARY KEY (CURE_ID)
);

CREATE TABLE ATTACK_SKILL(
	SKILL_ID INT NOT NULL,
	EFFECT_ID INT NOT NULL,
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (EFFECT_ID) REFERENCES ATTACK(ATTACK_ID)
);

CREATE TABLE DEFEND_SKILL(
	SKILL_ID INT NOT NULL,
	EFFECT_ID INT NOT NULL,
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (EFFECT_ID) REFERENCES DEFEND(DEFEND_ID)
);

CREATE TABLE CURE_SKILL(
	SKILL_ID INT NOT NULL,
	EFFECT_ID INT NOT NULL,
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (EFFECT_ID) REFERENCES CURE(CURE_ID)
);

CREATE TABLE GENSHIN(
	NAME VARCHAR(20) NOT NULL,
	HP INT NOT NULL,
	ATK INT NOT NULL,
	DEF INT NOT NULL,
	LV INT NOT NULL,
	SKILL_1 INT NOT NULL,
	SKILL_2 INT NOT NULL,
	SKILL_3 INT NOT NULL,
	PRIMARY KEY(NAME),
	FOREIGN KEY (SKILL_1) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (SKILL_2) REFERENCES SKILL (SKILL_ID),
	FOREIGN KEY (SKILL_3) REFERENCES SKILL (SKILL_ID)
);
