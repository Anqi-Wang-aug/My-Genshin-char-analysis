CREATE DATABASE IF NOT EXISTS Genshin;


CREATE TABLE SKILL (
	SKILL_ID int NOT NULL IDENTITY PRIMARY KEY,
	LV int NOT NULL
);

-- Note: for simplicity only, all percentage will only keep the number before the "%" 
CREATE TABLE ATTACK(
	ATTACK_ID int NOT NULL PRIMARY KEY,
	1ST float NOT NULL,
	2ND float NOT NULL,
	3RD float NOT NULL,
	4TH float NOT NULL,
	5TH float NOT NULL,
	CHARGED float NOT NULL
);

/* DEFEND (DMG ABSORPTION) CALCULATE BASED ON BASE * R + B
 * E.G. NOELLE'S DMG ABSORPTION  AT SKILL LEVEL 1= DEF (BASE) * 160% (R) + 769 (B)
 * CALCULATION ON HEALING USES THE SAME FORMULA */
CREATE TABLE DEFEND(
	DEFEND_ID int NOT NULL IDENTITY PRIMARY KEY,
	BASE varchar(10) NOT NULL,
	R float NOT NULL,
	B int NOT NULL
);

CREATE TABLE CURE(
	CURE_ID int NOT NULL IDENTITY PRIMARY KEY,
	BASE varchar(10) NOT NULL,
	R float not null,
	B int NOT NULL
);

CREATE TABLE ATTACK_SKILL(
	SKILL_ID int NOT NULL,
	EFFECT_ID int NOT NULL,
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (EFFECT_ID) REFERENCES ATTACK(ATTACK_ID)
);

CREATE TABLE DEFEND_SKILL(
	SKILL_ID int NOT NULL,
	EFFECT_ID int NOT NULL,
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (EFFECT_ID) REFERENCES DEFEND(DEFEND_ID)
);

CREATE TABLE CURE_SKILL(
	SKILL_ID int NOT NULL,
	EFFECT_ID int NOT NULL,
	FOREIGN KEY (SKILL_ID) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (EFFECT_ID) REFERENCES CURE(CURE_ID)
);

CREATE TABLE CHARACTER (
	NAME varchar(20) NOT NULL  IDENTITY PRIMARY KEY,
	HP int NOT NULL,
	ATK int NOT NULL,
	DEF int NOT NULL,
	LV int NOT NULL,
	SKILL_1 int NOT NULL,
	SKILL_2 int NOT NULL,
	SKILL_3 int NOT NULL,
	FOREIGN KEY (SKILL_1) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (SKILL_2) REFERENCES SKILL(SKILL_ID),
	FOREIGN KEY (SKILL_3) REFERENCES SKILL(SKILL_ID)
);
